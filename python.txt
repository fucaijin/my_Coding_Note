python笔记

pyqt5{
	测试安装是否成功。写下面的代码，运行看运行是否正确{
		if __name__ == '__main__':  
		app = QtWidgets.QApplication(sys.argv)
		MainWindow = QtWidgets.QMainWindow()
		ui = Ui_MainWindow()

		ui.setupUi(MainWindow) 
		MainWindow.show()
		sys.exit(app.exec_())
	}
	
	生成的ui文件转成py文件以后，在此py文件后面加下面代码即可运行{
		if __name__ == '__main__':  
		app = QtWidgets.QApplication(sys.argv)
		MainWindow = QtWidgets.QMainWindow()
		ui = Ui_MainWindow()

		ui.setupUi(MainWindow) 
		MainWindow.show()
		sys.exit(app.exec_()) 
	}
}

打开pip{
	pip在安装目录的Script文件夹下，在此文件夹打开命令行即可。如果安装了多个Python版本，
	没有配置在环境变量的那个python要打开pip需要使用命令(例如我装了27版本的)：python27 -m pip 这里可以写命令。
	否则会报错：failed to create process.有此错误的方法都可以用这方式解决
	
	列出已经安装的模块使用：pip list
	要删除则使用pip uninstall 模块名
	
	查看pip/第三方库的版本： pip show pip(/scrapy/django)
	更新/升级 pip/第三方库 : easy_install --upgrade pip(或者库名称)
	fucaijin使用的升级代码： pip install -U scrapy(库的名称)
	
	查看Django版本
	检查是否安装成功，可以在dos下查看Django版本。
	1.输入python 
	2.输入import django
	3.输入django.get_version()
	
	在python命令行输入以下命令：
	>>>import django
	>>>django.VERSION
	(1,11,4,'final',0)
	>>>
	(1,11,4,'final',0)是我的版本，就是1.11.4版本

	查看flask版本
	检查是否安装成功，可以在dos下查看flask版本。
	1.输入python 
	2.输入import flask
	3.输入flask.__version__
}

pip安装太慢/被墙{
	解决pip安装时速度慢的问题

	国内源：
	新版ubuntu要求使用https源，要注意。

	清华：https://pypi.tuna.tsinghua.edu.cn/simple

	阿里云：http://mirrors.aliyun.com/pypi/simple/

	中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/

	华中理工大学：http://pypi.hustunique.com/

	山东理工大学：http://pypi.sdutlinux.org/

	豆瓣：http://pypi.douban.com/simple/

	临时使用：
	可以在使用pip的时候加参数-i https://pypi.tuna.tsinghua.edu.cn/simple

	例如：pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pyspider，这样就会从清华这边的镜像去安装pyspider库。

	永久修改，一劳永逸：
	Linux下，修改 ~/.pip/pip.conf (没有就创建一个文件夹及文件。文件夹要加“.”，表示是隐藏文件夹)

	内容如下：

	[global] 
	index-url = https://pypi.tuna.tsinghua.edu.cn/simple 
	[install] 
	trusted-host=mirrors.aliyun.com
	
	windows下，直接在user目录中创建一个pip目录，如：C:\Users\xx\pip，新建文件pip.ini。内容同上。
}


导包{
	from SignUp import models
	from 包名 import 文件名
	使用的时候直接models.方法名即可
	例如models.initData()
	
	from weixin.views import login, register
	导入Weixin包中的views文件中的login, register方法
}

Django{
	新建/引入APP{
		在terminal执行： python manage.py startapp startapp weixin(app名称)
		打开项目同名文件夹下的setting.py，在INSTALLED_APPS = []尾部添加项目名称即可
	}
	
	测试服务器的开启：python manage.py runserver
	
	1.创建APP: 	
		在pycharm下方的terminal终端中输入命令：python manage.py startapp cmdb(app名称)
	2.编写路由：
		路由都在urls文件里，它将浏览器输入的url映射到相应的业务处理逻辑。
		打开urls.py文件，在数组里写urlpatterns = [url(r'^index/', views.index),  # 表示以index开头的，第二个参数就是路由，表示views.index这个方法为响应函数
												]
	3.编写业务处理逻辑(业务处理逻辑都在views.py文件里):
		定义def index(request): return 结果
	4.
		
		
		
	创建数据库表:	python manage.py makemigrations
	再输入命令	：	python manage.py migrate
	
	django 返回json格式数据{
		方法1：
			import json
			from django.http import HttpResponse
			def get_an_apple(request):
				resp = {'errorcode': 100, 'detail': 'Get success'}
				return HttpResponse(json.dumps(resp), content_type="application/json")
				
		方法2(推荐)：
		model.py
		class Click(models.Model):
			count = models.IntegerField()
			time = models.CharField(max_length=64, default="")
			
		views.py
		def json1(request):   
			all = Click.objects.values()
			return JSONResponse({"res":"success", "msg":all})
			
		结果：
		{"res":"success", 
		 "msg":[
				{"count":1,"id":1,"time":"2015-12-12"},
				{"count":2,"id":2,"time":"2015-12-2"},
				{"count":3,"id":3,"time":"2015-12-3"}
			   ]
		}
		
	}
}